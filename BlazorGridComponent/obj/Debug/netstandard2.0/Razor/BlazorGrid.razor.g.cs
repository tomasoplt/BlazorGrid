#pragma checksum "C:\Ks\BlazorGrid\BlazorGridComponent\BlazorGrid.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "026ec3ff14b45880466535aa60d0a3451ddf3fa7"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorGridComponent
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    public class BlazorGrid<TableItem> : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.OpenElement(0, "table");
            builder.AddContent(1, "\r\n    ");
            builder.OpenElement(2, "thead");
            builder.AddContent(3, "\r\n        ");
            builder.OpenElement(4, "tr");
            builder.AddAttribute(5, "class", "jsgrid-grid-header");
            builder.AddContent(6, GridHeader);
            builder.CloseElement();
            builder.AddContent(7, "\r\n    ");
            builder.CloseElement();
            builder.AddContent(8, "\r\n    ");
            builder.OpenElement(9, "tbody");
            builder.AddContent(10, "\r\n");
#line 8 "C:\Ks\BlazorGrid\BlazorGridComponent\BlazorGrid.razor"
         foreach (var item in ItemList)
        {

#line default
#line hidden
            builder.AddContent(11, "            ");
            builder.OpenElement(12, "tr");
            builder.AddAttribute(13, "class", "jsgrid-row-item");
            builder.AddContent(14, GridRow(item));
            builder.CloseElement();
            builder.AddContent(15, "\r\n");
#line 11 "C:\Ks\BlazorGrid\BlazorGridComponent\BlazorGrid.razor"
        }

#line default
#line hidden
            builder.AddContent(16, "    ");
            builder.CloseElement();
            builder.AddContent(17, "\r\n");
            builder.CloseElement();
            builder.AddContent(18, "\r\n");
            builder.OpenElement(19, "div");
            builder.AddAttribute(20, "class", "pagination");
            builder.AddContent(21, "\r\n\r\n    ");
            builder.OpenElement(22, "button");
            builder.AddAttribute(23, "class", "btn pagebutton btn-info");
            builder.AddAttribute(24, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, async () => SetPagerSize("back")));
            builder.AddContent(25, "\r\n        ");
            builder.AddContent(26, (MarkupString)"&laquo;");
            builder.AddContent(27, "\r\n    ");
            builder.CloseElement();
            builder.AddContent(28, "\r\n    ");
            builder.OpenElement(29, "button");
            builder.AddAttribute(30, "class", "btn pagebutton btn-secondary");
            builder.AddAttribute(31, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, async () => NavigateToPage("previous")));
            builder.AddContent(32, "Prev");
            builder.CloseElement();
            builder.AddContent(33, "\r\n\r\n");
#line 21 "C:\Ks\BlazorGrid\BlazorGridComponent\BlazorGrid.razor"
     for (int i = startPage; i <= endPage; i++)
    {
        var currentPage = i;

#line default
#line hidden
            builder.AddContent(34, "        ");
            builder.OpenElement(35, "button");
            builder.AddAttribute(36, "class", "btn" + " pagebutton" + " " + (currentPage==curPage?"currentpage":""));
            builder.AddAttribute(37, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, async () => updateList(currentPage)));
            builder.AddContent(38, "\r\n            ");
            builder.AddContent(39, currentPage);
            builder.AddContent(40, "\r\n        ");
            builder.CloseElement();
            builder.AddContent(41, "\r\n");
#line 27 "C:\Ks\BlazorGrid\BlazorGridComponent\BlazorGrid.razor"
    }

#line default
#line hidden
            builder.AddContent(42, "\r\n    ");
            builder.OpenElement(43, "button");
            builder.AddAttribute(44, "class", "btn pagebutton btn-secondary");
            builder.AddAttribute(45, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, async () => NavigateToPage("next")));
            builder.AddContent(46, "Next");
            builder.CloseElement();
            builder.AddContent(47, "\r\n    ");
            builder.OpenElement(48, "button");
            builder.AddAttribute(49, "class", "btn pagebutton btn-info");
            builder.AddAttribute(50, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, async () => SetPagerSize("forward")));
            builder.AddContent(51, "\r\n        ");
            builder.AddContent(52, (MarkupString)"&raquo;");
            builder.AddContent(53, "\r\n    ");
            builder.CloseElement();
            builder.AddContent(54, "\r\n\r\n    ");
            builder.OpenElement(55, "span");
            builder.AddAttribute(56, "class", "pagebutton btn btn-link disabled");
            builder.AddContent(57, "Page ");
            builder.AddContent(58, curPage);
            builder.AddContent(59, " of ");
            builder.AddContent(60, totalPages);
            builder.CloseElement();
            builder.AddContent(61, "\r\n\r\n");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 38 "C:\Ks\BlazorGrid\BlazorGridComponent\BlazorGrid.razor"
            
int totalPages;
int curPage;
int pagerSize;

int startPage;
int endPage;

/// <summary>
/// Header for BlazorGrid.
/// </summary>
[Parameter]
RenderFragment GridHeader { get; set; }

/// <summary>
/// Rows for BlazorGrid.
/// </summary>
[Parameter]
RenderFragment<TableItem> GridRow { get; set; }

/// <summary>
/// The list of item supplied to the BlazorGrid.
/// </summary>
[Parameter]
IEnumerable<TableItem> Items { get; set; }

/// <summary>
/// Size of each page of BlazorGrid. This is a required field.
/// </summary>
[Parameter]
int PageSize { get; set; }

IEnumerable<TableItem> ItemList { get; set; }

protected override async Task OnInitAsync()
{
    pagerSize = 5;
    curPage = 1;

    ItemList = Items.Skip((curPage - 1) * PageSize).Take(PageSize);
    totalPages = (int)Math.Ceiling(Items.Count() / (decimal)PageSize);

    SetPagerSize("forward");
}

public void updateList(int currentPage)
{
    ItemList = Items.Skip((currentPage - 1) * PageSize).Take(PageSize);
    curPage = currentPage;
    this.StateHasChanged();
}

public void SetPagerSize(string direction)
{
    if (direction == "forward" && endPage < totalPages)
    {
        startPage = endPage + 1;
        if (endPage + pagerSize < totalPages)
        {
            endPage = startPage + pagerSize - 1;
        }
        else
        {
            endPage = totalPages;
        }
        this.StateHasChanged();
    }
    else if (direction == "back" && startPage > 1)
    {
        endPage = startPage - 1;
        startPage = startPage - pagerSize;
    }
}

public void NavigateToPage(string direction)
{
    if (direction == "next")
    {
        if (curPage < totalPages)
        {
            if (curPage == endPage)
            {
                SetPagerSize("forward");
            }
            curPage += 1;
        }
    }
    else if (direction == "previous")
    {
        if (curPage > 1)
        {
            if (curPage == startPage)
            {
                SetPagerSize("back");
            }
            curPage -= 1;
        }
    }

    updateList(curPage);
}

#line default
#line hidden
    }
}
#pragma warning restore 1591
